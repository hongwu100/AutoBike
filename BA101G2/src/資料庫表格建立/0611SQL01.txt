

DROP TABLE "EMT_LIST"; 
DROP TABLE "EMT_DISPATCH_LIST"; 
DROP TABLE "EMT_DISP_LIST";
DROP TABLE "EQUIPMENT"; 
DROP TABLE "LATEST_NEWS";
DROP TABLE "NEWS"; 
DROP TABLE "IMMEDIATE_PUSH";
DROP TABLE "SPOTS"; 
DROP TABLE "ADMINISTRATOR";
DROP TABLE "ADMINIS";
DROP TABLE "RENTAL_ORDER";
DROP TABLE "RENT_ORD";
DROP TABLE "EMT_DISPATCH"; 
DROP TABLE "MOTOR_DISPATCH_LIST";
DROP TABLE "MOTOR_DISP_LIST";
DROP TABLE "MOTOR_DISPATCH"; 
DROP TABLE "SECOND_ORDER";
DROP TABLE "SEC_ORD"; 
DROP TABLE "MESSAGE_BOARD"; 
DROP TABLE "MES_BOARD"; 
DROP TABLE "MAINTENANCE_REC"; 
DROP TABLE "MAINT_REC";
DROP TABLE "MOTOR"; 
DROP TABLE "EMT_CATEGORY";
DROP TABLE "EMT_CATE";
DROP TABLE "AUTHORITY_CATEGORY"; 
DROP TABLE "AUTH_CATE";
DROP TABLE "MOTOR_MODEL"; 
DROP TABLE "LOCATION";
DROP TABLE "MEMBER";

DROP SEQUENCE motor_model_seq;
DROP SEQUENCE modtype_seq;
DROP SEQUENCE emt_category_seq;
DROP SEQUENCE ecno_seq;
DROP SEQUENCE location_seq;
DROP SEQUENCE locno_seq;
DROP SEQUENCE member_seq;
DROP SEQUENCE memno_seq;
DROP SEQUENCE authority_category_seq;
DROP SEQUENCE authno_seq;
DROP SEQUENCE motor_seq;
DROP SEQUENCE motno_seq;
DROP SEQUENCE maintenance_rec_seq;
DROP SEQUENCE maintno_seq;
DROP SEQUENCE message_board_seq;   
DROP SEQUENCE mesno_seq;   
DROP SEQUENCE second_order_seq;
DROP SEQUENCE sono_seq;
DROP SEQUENCE motor_dispatch_seq;
DROP SEQUENCE mdno_seq;
DROP SEQUENCE emt_dispatch_seq;
DROP SEQUENCE edno_seq;
DROP SEQUENCE rental_order_seq;
DROP SEQUENCE rentno_seq;
DROP SEQUENCE administrator_seq;
DROP SEQUENCE admno_seq;
DROP SEQUENCE spots_seq;
DROP SEQUENCE spno_seq;
DROP SEQUENCE immediate_seq;  
DROP SEQUENCE ipno_seq;  
DROP SEQUENCE latest_news_seq;
DROP SEQUENCE newsno_seq;
DROP SEQUENCE equipment_seq;  
DROP SEQUENCE emtno_seq;  




  CREATE TABLE "MOTOR_MODEL" 
   (	"MODTYPE" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"BRAND" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"DISPLACEMENT" NUMBER(10,0) NOT NULL ENABLE, 
	"NAME" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"RENPRICE" NUMBER(10,0), 
	"SALEPRICE" NUMBER(10,0), 
	"MOTPIC" BLOB, 
	 CONSTRAINT "MD_MODTYPE_PK" PRIMARY KEY ("MODTYPE")
   );
   
   CREATE SEQUENCE modtype_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   

   
      CREATE TABLE "EMT_CATE" 
   (	
  "ECNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"ECNAME" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"ECPRICE" NUMBER(10,0) NOT NULL ENABLE,
  ectype VARCHAR2(10),
	 CONSTRAINT "EC_ECNO_PK" PRIMARY KEY ("ECNO")
   );
   
   CREATE SEQUENCE ecno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   


  CREATE TABLE "LOCATION" 
   (	
  "LOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"LOCNAME" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"TEL" VARCHAR2(30) NOT NULL ENABLE, 
	"ADDR" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"PIC" BLOB, 
	"LON" FLOAT(10), 
	"LAT" FLOAT(10), 
	"STATUS" VARCHAR2(30 BYTE) default 'preparing' NOT NULL ENABLE, 
	 CONSTRAINT "LOCATION_LOCNO_PK" PRIMARY KEY ("LOCNO"),
   constraint location_status_ck check(status in ('open', 'closed', 'preparing'))
   );
   
   CREATE SEQUENCE locno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;  
   
   
   
   
      CREATE TABLE "MEMBER" 
   (	
  "MEMNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MEMNAME" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"SEX" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"BIRTH" TIMESTAMP NOT NULL ENABLE,
	"MAIL" VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	"PHONE" NUMBER(20,0) NOT NULL ENABLE, 
	"ADDR" VARCHAR2(100 BYTE), 
	"ACC" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"PWD" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"IDCARD1" BLOB, 
	"IDCARD2" BLOB, 
	"LICENSE" BLOB, 
  "CREDATE" TIMESTAMP default systimestamp NOT NULL, 
	"STATUS" VARCHAR2(30 BYTE) default 'unconfirm' NOT NULL ENABLE, 
	 CONSTRAINT "MEMBER_NO_PK" PRIMARY KEY ("MEMNO"),
   constraint member_status_ck check(status in ('confirmed', 'unconfirm')),
   constraint member_acc_uk unique(acc)
   );
   
   CREATE SEQUENCE memno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;  
   
   
        

  CREATE TABLE "AUTH_CATE" 
   (	
  "AUTHNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DESCR" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "AC_AUTHNO_PK" PRIMARY KEY ("AUTHNO"),
   constraint ac_descr_ck check(descr in ('hqadm', 'locadm','memadm', 'backadm', 'secadm','prodadm'))
   );
   
   CREATE SEQUENCE authno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   


  CREATE TABLE "MOTOR" 
   (	
  "MOTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MODTYPE" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"PLATENO" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"ENGNO" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"MANUDATE" TIMESTAMP NOT NULL ENABLE, 
	"MILE" NUMBER(10,0) NOT NULL ENABLE, 
	"LOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"STATUS" VARCHAR2(30 BYTE) default 'unleasable' NOT NULL ENABLE, 
	"NOTE" VARCHAR2(100 BYTE), 
	 CONSTRAINT "MOTOR_MOTNO_PK" PRIMARY KEY ("MOTNO"), 
	 CONSTRAINT "MOTOR_LOCNO_FK " FOREIGN KEY ("LOCNO")
	  REFERENCES "LOCATION" ("LOCNO") ENABLE, 
	 CONSTRAINT "MOTOR_MODTYPE_FK " FOREIGN KEY ("MODTYPE")
	  REFERENCES "MOTOR_MODEL" ("MODTYPE") ENABLE,
    constraint motor_status_ck check(status in ('unleasable','leasable','reserved','occupied','dispatching','seconsale','secpause','secreserved','secsaled','other'))
   );
   
   CREATE SEQUENCE motno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   
   
CREATE TABLE "MAINT_REC" 
   (	
  "MAINTNO" VARCHAR2(10 BYTE), 
	"MOTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DATE" TIMESTAMP (6) DEFAULT systimestamp NOT NULL ENABLE, 
	"CONT" CLOB NOT NULL ENABLE, 
	 CONSTRAINT "MR_MAINTNO_PK" PRIMARY KEY ("MAINTNO"),
   CONSTRAINT "MR_MOTNO_FK" FOREIGN KEY ("MOTNO")
	  REFERENCES "MOTOR" ("MOTNO") ENABLE
   ); 
   
   CREATE SEQUENCE maintno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   
    
   
     CREATE TABLE "MES_BOARD" 
   (	
  "MESNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MEMNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DATE" TIMESTAMP default systimestamp NOT NULL ENABLE, 
	"CONT" CLOB NOT NULL ENABLE, 
	"PIC" BLOB, 
	"STATUS" VARCHAR2(30 BYTE) default 'normal' NOT NULL ENABLE, 
	 CONSTRAINT "MB_MESNO_PK" PRIMARY KEY ("MESNO"), 
	 CONSTRAINT "MB_MEMNO_FK " FOREIGN KEY ("MEMNO")
	  REFERENCES "MEMBER" ("MEMNO") ENABLE,
    constraint mb_status_ck check(status in ('normal', 'hid'))
   );
   
   CREATE SEQUENCE mesno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ; 
   
   
   
   
    CREATE TABLE "SEC_ORD" 
   (
  "SONO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MEMNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MOTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"SODATE" TIMESTAMP default systimestamp NOT NULL ENABLE, 
	"STATUS" VARCHAR2(30 BYTE) default 'unpaid' NOT NULL ENABLE, 
	 CONSTRAINT "SECORD_SONO_PK" PRIMARY KEY ("SONO"), 
	 CONSTRAINT "SECORD_MOTNO_FK" FOREIGN KEY ("MOTNO")
	  REFERENCES "MOTOR" ("MOTNO") ENABLE, 
	 CONSTRAINT "SECORD_MEMNO_FK" FOREIGN KEY ("MEMNO")
	  REFERENCES "MEMBER" ("MEMNO") ENABLE,
    constraint so_sono_ck check(status in ('unpaid', 'paid', 'closed', 'other'))
   );
   
   CREATE SEQUENCE sono_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   

   
   
CREATE TABLE "MOTOR_DISPATCH" 
   (	
  "MDNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"LOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"FILLDATE" TIMESTAMP default systimestamp NOT NULL ENABLE, 
	"CLOSEDDATE" TIMESTAMP,	
	"PROG" VARCHAR2(30 BYTE) default 'request' NOT NULL ENABLE, 
	 CONSTRAINT "MD_MDNO_PK" PRIMARY KEY ("MDNO"), 
	 CONSTRAINT "MD_LOCNO_FK" FOREIGN KEY ("LOCNO")
	  REFERENCES "LOCATION" ("LOCNO") ENABLE,
    constraint md_PROG_ck check(PROG in ('request', 'rejected', 'canceled', 'dispatching', 'dispatched', 'closed', 'other'))
   ); 
   
   CREATE SEQUENCE mdno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   
     
   
   
   CREATE TABLE "MOTOR_DISP_LIST" 
   (	
  "MDNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MOTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "MDL_MDNO_PK" PRIMARY KEY ("MDNO", "MOTNO"), 
	 CONSTRAINT "MDL_MDNO" FOREIGN KEY ("MDNO")
	  REFERENCES "MOTOR_DISPATCH" ("MDNO") ENABLE, 
	 CONSTRAINT "MDL_MOTNO_FK" FOREIGN KEY ("MOTNO")
	  REFERENCES "MOTOR" ("MOTNO") ENABLE
   );  
   
   

   
   
  CREATE TABLE "EMT_DISPATCH" 
   (	"EDNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"LOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DEMANDDATE" TIMESTAMP default systimestamp NOT NULL ENABLE,  
	"CLOSEDATE" TIMESTAMP, 
	"PROG" VARCHAR2(30 BYTE) NOT NULL ENABLE,
	 CONSTRAINT "EMTDISP_EDNO_PK" PRIMARY KEY ("EDNO"), 
	 CONSTRAINT "EMTDISP_LOCNO_FK" FOREIGN KEY ("LOCNO")
	  REFERENCES "LOCATION" ("LOCNO") ENABLE,
   constraint ED_PROG_ck check(PROG in ('request', 'rejected', 'canceled', 'dispatching', 'dispatched', 'closed', 'other'))
   );
   
   CREATE SEQUENCE edno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
       
   
   
  CREATE TABLE "RENT_ORD" 
   (	
  "RENTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MEMNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MOTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"SLOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"RLOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"MILSTART" NUMBER(10,0) NOT NULL ENABLE, 
	"MILEND" NUMBER(10,0) NOT NULL ENABLE, 
	"FILLDATE" TIMESTAMP default systimestamp NOT NULL ENABLE, 
	"STARTDATE" TIMESTAMP NOT NULL ENABLE, 
	"ENDDATE" TIMESTAMP NOT NULL ENABLE,
  "RETURNDATE" TIMESTAMP,  
	"FINE" NUMBER(10,0), 
	"TOTAL" NUMBER(10,0) NOT NULL ENABLE, 
	"RANK" varchar2(1),
  "STATUS" VARCHAR2(30 BYTE) default 'unpaid' NOT NULL ENABLE,
	"NOTE" VARCHAR2(100 BYTE), 
	 CONSTRAINT "RENTORD_RENTNO_PK" PRIMARY KEY ("RENTNO"), 
	 CONSTRAINT "RENTORD_MEMNO_FK" FOREIGN KEY ("MEMNO")
	  REFERENCES "MEMBER" ("MEMNO") ENABLE, 
	 CONSTRAINT "RENTORD_MOTNO_FK" FOREIGN KEY ("MOTNO")
	  REFERENCES "MOTOR" ("MOTNO") ENABLE, 
	 CONSTRAINT "RENTORD_SLOCNO_FK" FOREIGN KEY ("SLOCNO")
	  REFERENCES "LOCATION" ("LOCNO") ENABLE, 
	 CONSTRAINT "RENTORD_RLOCNO_FK" FOREIGN KEY ("RLOCNO")
	  REFERENCES "LOCATION" ("LOCNO") ENABLE,
    constraint RO_status_ck check(status in ('unpaid', 'unoccupied', 'noshow', 'noreturn', 'overtime','abnormalclosed','closed','other')),
    constraint ro_rank_ck check(rank in ('1', '2','3','4','5'))
   );
   
   CREATE SEQUENCE rentno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   
   

  CREATE TABLE "ADMINIS" 
   (	
  "ADMNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"LOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"AUTHNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"NAME" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"ACC" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	"PW" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "ADMINIS_ADMNO_PK" PRIMARY KEY ("ADMNO"), 
	 CONSTRAINT "ADMINIS_LOCNO_FK" FOREIGN KEY ("LOCNO")
	  REFERENCES "LOCATION" ("LOCNO") ENABLE, 
	 CONSTRAINT "ADMINIS_AUTHNO_FK" FOREIGN KEY ("AUTHNO")
	  REFERENCES "AUTH_CATE" ("AUTHNO") ENABLE,
    constraint admins_acc_uk UNIQUE(acc)
   );
   
   CREATE SEQUENCE admno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   
   

  CREATE TABLE "SPOTS" 
   (	
  "SPNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"SPNAME" VARCHAR2(30 BYTE) NOT NULL ENABLE,
  "LOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
  "SPLONG" FLOAT(10) NOT NULL ENABLE, 
	"SPLAT" FLOAT(10) NOT NULL ENABLE, 
	 CONSTRAINT "SPOTS_SPNO_PK" PRIMARY KEY ("SPNO"),
   constraint spots_locno_fk foreign key(locno) references location(locno)
  );
  
   CREATE SEQUENCE spno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   
     

  CREATE TABLE "IMMEDIATE_PUSH" 
   (
  "IPNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"ADMNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"IPCONT" CLOB NOT NULL ENABLE, 
	"PUSHNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "IP_IPNO_PK" PRIMARY KEY ("IPNO"), 
	 CONSTRAINT "IP_ADMNO_FK" FOREIGN KEY ("ADMNO")
	  REFERENCES "ADMINIS" ("ADMNO") ENABLE
   );
   
   CREATE SEQUENCE ipno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   

  CREATE TABLE "NEWS" 
   (	
  "NEWSNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"ADMNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"DATE" TIMESTAMP default systimestamp NOT NULL ENABLE, 
	"CONT" CLOB NOT NULL ENABLE, 
	"PIC" BLOB, 
	"TITLE" VARCHAR2(100 BYTE) NOT NULL ENABLE, 
	"STATUS" VARCHAR2(30 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "NEWS_NEWSNO_PK" PRIMARY KEY ("NEWSNO"), 
	 CONSTRAINT "NEWS_ADMNO_FK" FOREIGN KEY ("ADMNO")
	  REFERENCES "ADMINIS" ("ADMNO") ENABLE,
         constraint news_status_ck check(status in ('normal', 'hid'))
   );
   
   CREATE SEQUENCE newsno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   
   

  CREATE TABLE "EQUIPMENT" 
   (	
	"EMTNO" VARCHAR2(10 BYTE), 
	"ECNO" VARCHAR2(10 BYTE) NOT NULL ENABLE,
	"LOCNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"PURCHDATE" TIMESTAMP (6) DEFAULT SYSTIMESTAMP NOT NULL ENABLE, 
	"STATUS" VARCHAR2(30 BYTE) DEFAULT 'unleasable' NOT NULL ENABLE, 
	"NOTE" VARCHAR2(100 BYTE), 
	 CONSTRAINT "EQUIPMENT_STATUS_CK" CHECK ( STATUS in ('unleasable', 'leasable','reserved', 'occupied', 'dispatching','other' )) ENABLE, 
	 CONSTRAINT "EQUIPMENT_EMTNO_PK" PRIMARY KEY ("EMTNO"),
 	 CONSTRAINT "EQUIPMENT_LOCNO_FK" FOREIGN KEY ("LOCNO")
	  REFERENCES "LOCATION" ("LOCNO") ENABLE, 
	 CONSTRAINT "EQUIPMENT_ECNO_FK" FOREIGN KEY ("ECNO")
	  REFERENCES "EMT_CATE" ("ECNO") ENABLE
   );
   
   CREATE SEQUENCE emtno_seq
   INCREMENT BY 1
   START WITH 1
   NOMAXVALUE
   NOCYCLE
   ;
   
   


  CREATE TABLE "EMT_DISP_LIST" 
   (	
  "EDNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"EMTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "EMTDISPLIST_EDNO_PK" PRIMARY KEY ("EDNO", "EMTNO"),
	 CONSTRAINT "EDL_EDNO_FK" FOREIGN KEY ("EDNO")
	  REFERENCES "EMT_DISPATCH" ("EDNO") ENABLE, 
	 CONSTRAINT "EDL_EMTNO_FK" FOREIGN KEY ("EMTNO")
	  REFERENCES "EQUIPMENT" ("EMTNO") ENABLE
   );

   
CREATE TABLE "EMT_LIST" 
   (	
  "RENTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"EMTNO" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "EL_RENTNO_PK" PRIMARY KEY ("RENTNO", "EMTNO"),
	 CONSTRAINT "EL_RENTALNO_FK" FOREIGN KEY ("RENTNO")
	  REFERENCES "RENT_ORD" ("RENTNO") ENABLE, 
	 CONSTRAINT "EL_EMTNO_FK" FOREIGN KEY ("EMTNO")
	  REFERENCES "EQUIPMENT" ("EMTNO") ENABLE
   );



